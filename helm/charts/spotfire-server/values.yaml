# ===============================
# image settings
# ===============================

# spotfire-global image settings
global:
  spotfire:
    image:
      # global.spotfire.image.registry -- The global container image registry. Used for TIBCO/Spotfire container images unless overridden.
      registry:
      # global.spotfire.image.pullPolicy -- The global container image pull policy.
      pullPolicy: IfNotPresent
      # global.spotfire.image.pullSecrets -- The global container image pull secrets.
      ## E.g.
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

# spotfire-server image settings
image:
  # image.registry -- The image registry for spotfire-server. Overrides global.spotfire.image.registry value.
  registry:
  # image.repository -- The spotfire-server image repository.
  repository: tibco/spotfire-server
  # image.tag -- The container image tag to use.
  tag: "12.1.1-1.1.0"
  # image.pullPolicy -- The spotfire-server image pull policy. Overrides global.spotfire.image.pullPolicy.
  pullPolicy:
  ## Optionally specify an array of imagePullSecrets.
  # image.pullSecrets -- spotfire-server image pull secrets.
  pullSecrets: []

fluentBitSidecar:
  image:
    # -- The image repository for fluent-bit logging sidecar.
    repository: fluent/fluent-bit
    # -- The image tag to use for fluent-bit logging sidecar.
    tag: "1.9.8"
    # -- The image pull policy for the fluent-bit logging sidecar image.
    pullPolicy: IfNotPresent

  # -- The securityContext setting for fluent-bit sidecar container. Overrides any securityContext setting on the Pod level.
  # More info: `kubectl explain pod.spec.securityContext`
  securityContext: {}

# Also see cliPod.image & configJob.image settings.

# ===============================
# various generic chart settings
# ===============================

# -- The number of Spotfire Server containers.
replicaCount: 1

service:
  ## -- The haproxy deployment service type.
  type: ClusterIP

serviceAccount:
  # Specifies whether to use a service account.
  create: true
  # Annotations to add to the service account.
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, then a name is generated using the fullname template.
  name: ""

podAnnotations:
  prometheus.io/path: /spotfire/metrics
  prometheus.io/port: "9080"
  prometheus.io/scrape: "true"

# -- The Pod securityContext setting applies to all of the containers inside the Pod.
# More info: `kubectl explain deployment.spec.template.spec.securityContext`
podSecurityContext: {}

# -- The securityContext setting for spotfire-server container. Overrides any securityContext setting on the Pod level.
# More info: `kubectl explain deployment.spec.template.spec.containers.securityContext`
securityContext: {}

## Spotfire Server startup, readiness, and liveness probe initial delay and timeout.
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
startupProbe:
  enabled: true
  httpGet:
    path: /spotfire/rest/status/getStatus
    port: http
  initialDelaySeconds: 60
  periodSeconds: 10
  failureThreshold: 30
livenessProbe:
  enabled: true
  httpGet:
    path: /spotfire/rest/status/getStatus
    port: http
  periodSeconds: 3
  failureThreshold: 3
readinessProbe:
  enabled: false

# -- Configuration of the Spotfire Server container lifecycle PreStop hook.
draining:
  # -- Enables or disables the container lifecycle PreStop hook.
  enabled: true
  # -- The draining timeout in seconds after which the service is forcibly shut down.
  timeoutSeconds: 60
  # -- The minimum time in seconds that the server should be draining, even if it is considered idle.
  minimumSeconds: 30

ingress:
  # -- Enables configuration of ingress to expose Spotfire Server. Requires ingress support in the Kubernetes cluster.
  enabled: false
  hosts:
      - host: "spotfire.local"
        paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This increases chances that charts can run on environments with few
  # resources, such as Minikube. If you do want to specify resources, then uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- KEDA autoscaling configuration. See https://keda.sh/docs/latest/concepts/scaling-deployment for more details.
# @default -- Disabled
kedaAutoscaling:
  enabled: false
  # -- The interval to check each trigger on.
  pollingInterval: 30
  # -- The period to wait after the last trigger reported active before scaling the resource back to 0.
  cooldownPeriod: 300
  # -- The minimum number of replicas KEDA scales the resource down to.
  minReplicas: 1
  # -- This setting is passed to the HPA definition that KEDA creates for a given resource and holds the maximum number of replicas of the target resource.
  maxReplicas: 4
  # threshold: 8
  # fallback:
  advanced:
    horizontalPodAutoscalerConfig:
      behavior:
        scaleDown:
          policies:
          - type: Pods
            value: 1
            periodSeconds: 60
  # -- Spotfire specific settings
  spotfireConfig:
    # -- REQUIRED The URL to the Prometheus server where metrics should be fetched from.
    prometheusServerAddress: http://prometheus-server.monitor.svc.cluster.local

nodeSelector: {}

tolerations: []

affinity: {}

# -- Additional environment variables that all spotfire-server pods use.
extraEnvVars: []
#  - name: NAME
#    value: value

# The name of the ConfigMap containing extra environment variables all spotfire-server pods.
extraEnvVarsCM: ""

# The name of the Secret containing extra environment variables all spotfire-server pods.
extraEnvVarsSecret: ""

# -- Additional init containers to add to Spotfire server pod.
# More info: `kubectl explain deployment.spec.template.spec.initContainers`
extraInitContainers: []

# -- Extra volumeMounts for the spotfire-server container.
# More info: `kubectl explain deployment.spec.template.spec.containers.volumeMounts`
extraVolumeMounts: []

# -- Extra volumes for the spotfire-server container.
# More info: `kubectl explain deployment.spec.template.spec.volumes`
extraVolumes: []

# ===============================
# cliPod
# ===============================

cliPod:
  # Enable or disable the spotfire-cli interactive configuration command line interface.
  enabled: true
  # -- Set to DEBUG or TRACE to increase log level. Defaults to INFO if unset.
  logLevel: ""
  # -- Additional environment variables all spotfire-server pods use.
  #  - name: NAME
  #    value: value
  extraEnvVars: []
  # The name of the ConfigMap containing extra environment variables all spotfire-server pods use.
  extraEnvVarsCM: ""
  # The name of the Secret containing extra environment variables all spotfire-server pods use.
  extraEnvVarsSecret: ""
  # -- Extra volumeMounts for the configJob Job.
  # More info: `kubectl explain deployment.spec.template.spec.containers.volumeMounts`
  extraVolumeMounts: []
  # -- Extra volumes for the configJob Job.
  # More info: `kubectl explain deployment.spec.template.spec.volumes`
  extraVolumes: []
  # -- Additional init containers to add to cli pod.
  # More info: `kubectl explain deployment.spec.template.spec.initContainers`
  extraInitContainers: []
  # -- The securityContext setting for cliPod.
  # More info: `kubectl explain deployment.spec.template.spec.containers.securityContext`
  securityContext: {}
  # -- The podSecurityContext setting for cliPod
  # More info: `kubectl explain deployment.spec.template.spec.securityContext`
  podSecurityContext: {}
  # -- Podannotations for cliPod
  podAnnotations: {}
  image:
    # -- The image registry for spotfireConfig. Overrides global.spotfire.image.registry value.
    registry:
    # -- The spotfireConfig image repository.
    repository: tibco/spotfire-config
    # -- The spotfireConfig container image tag to use.
    tag: "12.1.1-1.1.0"
    # -- The spotfireConfig image pull policy. Overrides global.spotfire.image.pullPolicy.
    pullPolicy:
    #  -- The spotfireConfig image pull secrets.
    pullSecrets: []

# ===============================
# configJob
# ===============================

configJob:
  # -- Set to DEBUG or TRACE to increase log level. Defaults to INFO if unset.
  logLevel: ""
  # -- Set the length of time in seconds to keep job and its logs until the job is removed.
  ttlSecondsAfterFinished: 3600
  # -- Additional environment variables for all spotfire-server pods to use.
  #  - name: NAME
  #    value: value
  extraEnvVars: []
  # The name of the ConfigMap containing the extra environment variables all spotfire-server pods use.
  extraEnvVarsCM: ""
  # The name of the Secret containing extra environment variables all spotfire-server pods use.
  extraEnvVarsSecret: ""
  # -- Extra volumeMounts for the configJob Job.
  # More info: `kubectl explain job.spec.template.spec.containers.volumeMounts`
  extraVolumeMounts: []
  # -- Extra volumes for the configJob Job.
  # More info: `kubectl explain job.spec.template.spec.volumes`
  extraVolumes: []
  # -- Additional init containers to add to the Spotfire server configuration pod.
  # More info: `kubectl explain job.spec.template.spec.initContainers`
  extraInitContainers: []
  # -- The securityContext setting for configJob.
  # More info: `kubectl explain job.spec.template.spec.containers.securityContext`
  securityContext: {}
  # -- The podSecurityContext setting for configJob.
  # More info: `kubectl explain job.spec.template.spec.securityContext`
  podSecurityContext: {}
  # -- Podannotations for configJob
  podAnnotations: {}
  image:
    # -- The image registry for spotfireConfig. Overrides global.spotfire.image.registry value.
    registry:
    # -- The spotfireConfig image repository.
    repository: tibco/spotfire-config
    # -- The spotfireConfig container image tag to use.
    tag: "12.1.1-1.1.0"
    # -- The spotfireConfig image pull policy. Overrides global.spotfire.image.pullPolicy.
    pullPolicy:
    #  -- The spotfireConfig image pull secrets.
    pullSecrets: []

# ===============================
# Spotfire specific volumes
# ===============================

volumes:
  troubleshooting:
    persistentVolumeClaim:
       # -- If 'true', then a 'PersistentVolumeClaim' is created.
      create: false

      # -- Specifies the name of the 'StorageClass' that to use for the volumes.troubleshooting-claim.
      storageClassName: ""

      # -- Specifies the standard K8s resource requests and/or limits for the volumes.troubleshooting claims.
      resources:
        requests:
          storage: 2Gi

      # -- Specifies the name of the persistent volume to use for the volumes.troubleshooting-claim.
      volumeName:

    # -- When 'persistentVolumeClaim.create' is 'false', then use this value to define an already-existing
    # persistent volume claim
    existingClaim: ""

  # The volume with mountPath: /opt/tibco/tss/tomcat/application-data/library
  libraryImportExport:
    persistentVolumeClaim:
       # -- If 'true', then a 'PersistentVolumeClaim' is created.
      create: false

      # -- Specifies the name of the 'StorageClass' to use for the libraryImportExport volume-claim.
      storageClassName: ""

      # -- Specifies the standard Kubernetes resource requests and/or limits for the libraryImportExport volume claims.
      resources:
        requests:
          storage: 1Gi

      # -- Specifies the name of the persistent volume to use for the libraryImportExport volume-claim.
      volumeName:

    # When 'persistentVolumeClaim.create' is 'false', then this value is used to define an already-existing
    # persistent volume claim.
    existingClaim: ""

  # The volume with mountPath: /opt/tibco/tss/tomcat/custom-ext
  customExt:
    # Defines an already-existing persistent volume claim.
    existingClaim: ""

  # The volume with mountPath: /opt/tibco/tss/tomcat/custom-ext-informationservices
  customExtInformationservices:
    # Defines an already-existing persistent volume claim.
    existingClaim: ""    

  # The volume with mountPath: /opt/tibco/tss/tomcat/certs
  certificates:
    # Defines an already-existing persistent volume claim.
    existingClaim: ""

  # The volume with mountPath: /opt/tibco/spotfireconfigtool/deployments
  deployments:
    # Defines an already-existing persistent volume claim.
    existingClaim: ""

# ===============================
# Spotfire application configuration
# ===============================

logging:
  # -- Specifies a logForwarderAddress. If left empty, then the default log-forwarder is used in the case where log-forwarder.enabled=true. Template.
  logForwarderAddress: ""
  # -- The Spotfire Server log-level. Set to `debug`, `trace`, `minimal` or leave empty for info.
  logLevel: ""

# -- The Spotfire config tool password to use for bootstrap.xml. If not provided, this password is automatically generated.
toolPassword: "toolpassword"

database:
  # -- For details related to bootstrap properties, visit the product documentation [here](https://docs.tibco.com/pub/spotfire_server/latest/doc/html/TIB_sfire_server_tsas_admin_help/server/topics/bootstrap.html)
  bootstrap:
    # -- The JDBC URL of the database to be used by Spotfire Server
    databaseUrl: "jdbc:postgresql://HOSTNAME/"
    #  -- The Java driver class of the JDBC driver to be used with underlying database
    driverClass: "org.postgresql.Driver"
    # -- Username to be created for the Spotfire Server database. If unset, default value spotfire would be used.
    username: "spotfire"
    # -- Password to be created for the Spotfire Server database
    # If not provided, this password is automatically generated.
    password: ""
    # -- Read username and password from an existing secret instead of from values. Keys must be 'SPOTFIREDB_USERNAME' and 'SPOTFIREDB_PASSWORD'.
    # If not set, a secret will be created.
    existingSecret: ""
  # -- For details related to create-db cli properties, visit the product documentation [here](https://docs.tibco.com/pub/spotfire_server/latest/doc/html/TIB_sfire_server_tsas_admin_help/server/topics/create-db.html)
  # create-db cli also uses properties from database.bootstrap section.
  create-db:
    # -- if set to true, Spotfire server schema will also get deployed with other installation
    enabled: true
    # -- Admin username for the database server to be used as the Spotfire Server database
    adminUsername: "postgres"
    # -- Instead of adminUsername. If set, read username from an existing secret and key
    adminUsernameExistingSecret:
      ## -- Name of the kubernetes secret containing the administrator username
      name: ""
      ## -- Name of the key to read the administrator password from
      key: DBSERVER_ADMIN_USERNAME
    adminPassword: ""
    # -- Instead of adminPassword. If set, read password from an existing secret and key
    adminPasswordExistingSecret:
      ## -- Name of the kubernetes secret containing the administrator password
      name: ""
      ## -- Name of the key to read the administrator password from
      key: DBSERVER_ADMIN_PASSWORD
    # -- Like database.bootstrap.databaseUrl but is used for the connection when creating the spotfire database.
    databaseUrl: ""
    # -- Database name to be created to hold the Spotfire Server database schemas
    spotfiredbDbname: "spotfire"
    # -- Set this to true, in case supported databases(AWS Postgre, Aurora Postgres, Azure Postgres, Google Cloud Postgres) does not allow user creation
    doNotCreateUser: false
    # -- For connecting to MS SQL or Oracle on Amazon RDS, specify 'rds', for MS SQL on Azure, specify 'azure', otherwise omit the option.
    variant: ""
    # -- Specify the value in case of Oracle database, otherwise keep it blank
    oracleTablespacePrefix: ""
    # -- Specify the value in case of Oracle database, otherwise keep it blank
    oracleRootfolder: ""
  # -- Often new Spotfire server version requires an upgraded database. If true, the database will be upgrade to match the server version being deployed.
  upgrade: true

configuration:

  # -- Export the existing Spotfire configuration before applying any additional configuration. If false, then a default configuration is created with `config.sh create-default-config`.
  useExisting: true

  # -- Applies various Spotfire application settings recommended for Kubernetes environments.
  applyKubernetesConfiguration: true

  # -- A list of configuration scripts to apply during helm installation or upgrade. Each list item should have the keys 'name' and 'script'. See [config.sh run script](https://docs.tibco.com/pub/spotfire_server/latest/doc/html/TIB_sfire_server_tsas_admin_help/server/topics/scripting_a_configuration.html). Commands in these scripts should operate only on a local configuration.xml. configuration.xml is automatically imported after all configuration steps run in the order in which they are defined below.
  configurationScripts: []
  # - name: my_configuration_script_name
  #   script: "my configuration script content"

  # -- A list of command scripts to run during helm installation or upgrade. Each list item should have the keys 'name' and 'script'. See [config.sh run script](https://docs.tibco.com/pub/spotfire_server/latest/doc/html/TIB_sfire_server_tsas_admin_help/server/topics/scripting_a_configuration.html). Commands in these scripts should NOT operate on configuration.xml. Operations such as adding/removing users and assigning licenses are such typical administrative commands.
  commandScripts: []
  # - name: my_command_script_name
  #   script: "my confiugration script content"

# -- The password for encrypting passwords that are stored in the database. If you do not set this option, then a static password is used. See \-\-encryption-password for the [bootstrap](https://docs.tibco.com/pub/spotfire_server/latest/doc/html/TIB_sfire_server_tsas_admin_help/server/topics/bootstrap.html) command.
encryptionPassword: ""

# -- The user to create for the Spotfire admin.
spotfireAdmin:
  username: "admin"
  # -- The password to create for the Spotfire admin. If not provided, this password is automatically generated. Although possible, it is not recommended to change the user's password directly in the Spotfire adminstrative user interace because the password is reset to this value on every helm installation or upgrade.
  password: ""
  # -- Read admin username and password from an existing secret instead of from values. Keys should be 'SPOTFIREADMIN_USERNAME' and 'SPOTFIREADMIN_PASSWORD'.
  existingSecret: ""

troubleshooting:
  jvm:
    heapDumpOnOutOfMemoryError:
      # -- Enable or disable for a heap dump in case of OutOfMemoryError.
      enabled: true
      # -- Define a path where the generated dump is exported.
      # By default, this gets mounted in EmptyDir: {} internally, which survives container restarts.
      # In case you want to persist troubleshooting information to an external location, you can override the default behaviour by specifying PVC in .Values.volumes.troubleshooting.
      dumpPath: /opt/tibco/troubleshooting/jvm-heap-dumps

spotfireServerJava:
  # -- Additional JAVA_OPTS for spotfire-server pods.
  ## Example
    ## extraJavaOpts:
    ##  - -Dsystem.property=value
  extraJavaOpts: []

# -- Site settings. See https://docs.tibco.com/pub/spotfire_server/latest/doc/html/TIB_sfire_server_tsas_admin_help/server/topics/sites.html for more information.
# @default -- Spotfire Server joins the Default site.
site:
  # -- The name of the site that the Spotfire Server should belong to. The site must be created beforehand. See https://docs.tibco.com/pub/spotfire_server/latest/doc/html/TIB_sfire_server_tsas_admin_help/server/topics/create-site.html for more information.
  name: "Default"
  displayName: " "
  # -- The address that clients use for connecting to the system. It is also used for generating absolute URLs.
  publicAddress: ""


# ===============================
# haproxy
# ===============================
haproxy:
  enabled: true
  podSecurityPolicy:
    create: false
  kind: Deployment

  service:
    # -- Sets the service haproxy service proxies traffic to the spotfire-server service. ClusterIP or LoadBalancer.
    type: ClusterIP

  # Temporary workaround to address an issue in chart version 1.7.0. See
  # https://github.com/haproxytech/helm-charts/commit/bcb6d2621192d409c00e03db4ca351b26d2dfc01#diff-c1b4de66e84520a1bd950f258cc22cfebe60117c19a4af830b27f15fd7858dad.
  extraVolumeMounts:
    - name: chart-fix
      mountPath: /tmp/chart/fix
  extraVolumes:
    - name: chart-fix
      emptyDir: {}

  # -- Prometheus annotations. Should match the haproxy.config settings.
  podAnnotations:
    prometheus.io/path: "/metrics"
    prometheus.io/port: "1024"
    prometheus.io/scrape: "true"

  podLabels:
    #app.kubernetes.io/name: {{ include "spotfire-node-manager.name" . }}
    #app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: spotfire
    app.kubernetes.io/component: haproxy

  # -- The haproxy configuration file template.
  # @default -- The chart creates a configuration automatically.
  config: |
    global
      log stdout format raw local0
      daemon
      maxconn 1024
    defaults
      log global
      mode http
      option http-server-close
      http-reuse safe
      option forwardfor except 127.0.0.0/8
      option dontlognull
      option http-keep-alive
      option httplog
      option prefer-last-server
      option redispatch
      retries 1
      timeout client {{ .Values.spotfireConfig.timeouts.client }}
      timeout queue {{ .Values.spotfireConfig.timeouts.queue }}
      timeout connect {{ .Values.spotfireConfig.timeouts.connect }}
      timeout server {{ .Values.spotfireConfig.timeouts.server }}
      timeout tunnel {{ .Values.spotfireConfig.timeouts.tunnel }}
      timeout http-request {{ .Values.spotfireConfig.timeouts.httpRequest }}
    frontend stats
      bind :1024
      {{- if not .Values.spotfireConfig.debug }}
      option dontlog-normal
      {{- end }}

      http-request use-service prometheus-exporter if { path {{ index .Values "podAnnotations" "prometheus.io/path" }} }
      stats enable
      stats uri /stats
      stats refresh 10s
    frontend spotfire
      bind :80

      option httplog

      # Deny all non-spotfire requests
      http-request deny status 403 content-type text/html string "403 Forbidden" unless { path -m beg /spotfire/ } || { path / } || { path /spotfire }

      # Deny external access to Spotfire Server health check url
      http-request deny deny_status 404 if { path /spotfire/rest/status/getStatus }

      {{- if .Values.spotfireConfig.debug }}

      # For logging purposes
      capture request header X-Forwarded-Proto len 5
      {{- end }}

      {{- if or .Values.spotfireConfig.cleanup.secureCookieAttributeForHttp .Values.spotfireConfig.cleanup.sameSiteCookieAttributeForHttp }}

      # Clean up cookies attributes that work less well in different combinations, relies on correct
      # value of the ingress to set X-Forwarded-Proto correctly.
      http-request set-var(txn.x_forwarded_proto) req.hdr(X-Forwarded-Proto),lower

      {{- if .Values.spotfireConfig.cleanup.secureCookieAttributeForHttp }}
      http-response replace-header Set-Cookie "(.*)(; Secure)(.*)" "\1\3" if !{ var(txn.x_forwarded_proto) -m str "https" }
      {{- end }}

      {{- if .Values.spotfireConfig.cleanup.sameSiteCookieAttributeForHttp }}
      http-response replace-header Set-Cookie "(.*)(; SameSite=\S+)(.*)" "\1\3" if !{ var(txn.x_forwarded_proto) -m str "https" }
      {{- end }}

      {{- end }}

      default_backend spotfire

      {{- if .Values.spotfireConfig.cache.enabled }}

      http-request cache-use tss
      http-response cache-store tss
      http-after-response del-header Set-Cookie if { res.cache_hit }


      {{- if .Values.spotfireConfig.debug }}

      # For debug purposes
      http-response set-header X-Cache-Status HIT if { res.cache_hit }
      http-response set-header X-Cache-Status MISS if !{ res.cache_hit }
      {{- end }}

      {{- end }}

      {{- if .Values.spotfireConfig.debug }}

      # For logging purposes
      capture request header X-Forwarded-Proto len 5
      {{- end }}


    {{- if .Values.spotfireConfig.cache.enabled }}

    cache tss
      # In megabytes
      total-max-size 100

      # In seconds
      max-age 10485760

      # In bytes
      max-object-size 10485760

      process-vary on
    {{- end }}

    backend spotfire
      dynamic-cookie-key {{ .Values.spotfireConfig.loadBalancingCookie.dynamicCookieKey }}
      cookie {{ .Values.spotfireConfig.loadBalancingCookie.name }} {{ .Values.spotfireConfig.loadBalancingCookie.attributes }}
      option httpchk GET /spotfire/rest/status/getStatus HTTP/1.0

      {{- if .Values.spotfireConfig.debug }}

      # For debug purposes
      http-response set-header X-Server %s
      {{- end }}

      server-template srv 10 _http._tcp.{{ include "haproxy.spotfire-server.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local resolvers pcdns check weight 100 agent-check agent-port {{ .Values.spotfireConfig.agent.port }}
    resolvers pcdns
      parse-resolv-conf
      resolve_retries       3
      timeout resolve       1s
      timeout retry         1s
      hold other           30s
      hold refused         30s
      hold nx              30s
      hold timeout         30s
      hold valid           10s
      hold obsolete        30s

  # -- Spotfire specific configuration related to haproxy.
  # @default -- Caching of static resource and debug response headers enabled.
  spotfireConfig:
    # -- Specifies if debug response headers should be enabled.
    debug: false
    # -- haproxy related timeouts
     # @default -- haproxy timeouts
    timeouts:
      # -- https://cbonte.github.io/haproxy-dconv/2.4/configuration.html#4.2-timeout%20client
      client: 30m
      # -- https://cbonte.github.io/haproxy-dconv/2.4/configuration.html#4.2-timeout%20connect
      connect: 300ms
      # -- https://cbonte.github.io/haproxy-dconv/2.4/configuration.html#4-timeout%20queue
      queue: 60s
      # -- https://cbonte.github.io/haproxy-dconv/2.4/configuration.html#4.2-timeout%20server
      server: 30m
      # -- https://cbonte.github.io/haproxy-dconv/2.4/configuration.html#4.2-timeout%20tunnel
      tunnel: 31m
      # -- https://cbonte.github.io/haproxy-dconv/2.4/configuration.html#4.2-timeout%20http-request
      httpRequest: 3600s
    # -- Cookie-related configuration.
    # @default -- stateless load balancing
    loadBalancingCookie:
      name: JSESSIONID
      # -- dynamic-cookie-key value in the haproxy config.
      # @default -- the cookie key
      dynamicCookieKey: "Sp0tf1re01"
      # -- Attributes for the cookie value in the haproxy config. See https://cbonte.github.io/haproxy-dconv/2.4/configuration.html#4.2-cookie for more information.
      attributes: "prefix dynamic"
    cleanup:
      # -- If the SameSite cookie attribute should be removed for HTTP connections in Set-Cookie response headers, then it might be needed in cases where both HTTP and HTTPS are enabled, and upstream servers set this unconditionally.
      sameSiteCookieAttributeForHttp: true
      # -- If incorrect, then the secure cookie attribute should be removed for HTTP connections in the Set-Cookie response headers.
      secureCookieAttributeForHttp: true

    # @default --
    agent:
      # -- Spotfire Server haproxy agent-port.
      port: 9081
    # -- Caching of static resources
    # @default -- enabled
    cache:
      enabled: true

# ===============================
# fluent-bit (also known as "log-forwarder")
# ===============================
# The values listed below are provided to the fluent-bit helm chart.
# See https://github.com/fluent/helm-charts/blob/main/charts/fluent-bit/values.yaml for a description of available values.
log-forwarder:
  # -- enables or disables the fluent-bit log-forwarder pod. If enabled, it
  # collects logs from the spotfire-server pods and can forward traffic
  # to any output supported by fluent-bit.
  enabled: true
  rbac:
    # -- Specifies whether to create an rbac for the fluent-bit / log-forwarder. Setting
    # this to `true` requires additional privileges in the Kubernetes
    # cluster.
    create: false
  kind: Deployment
  extraPorts:
    - port: 5170
      protocol: TCP
      name: json
      containerPort: 5170
    - port: 24224
      protocol: TCP
      name: forward
      containerPort: 24224
  image:
    pullPolicy: IfNotPresent
  podAnnotations:
    prometheus.io/path: /api/v1/metrics/prometheus
    prometheus.io/port: "2020"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/part-of: spotfire
    app.kubernetes.io/component: logging
  service:
    labels:
      app.kubernetes.io/part-of: spotfire
      app.kubernetes.io/component: logging
  podLabels:
    app.kubernetes.io/part-of: spotfire
    app.kubernetes.io/component: logging
  config:
    # -- Override this value with an [output configuration](https://docs.fluentbit.io/manual/pipeline/outputs) to send logs to an external system.
    # @default -- Logs are written to stdout of the log-forwarder pod.
    outputs: |
      [OUTPUT]
          Name        stdout
          Match_Regex (tss|tsnm)\..*

    # -- fluent-bit [input configuration](https://docs.fluentbit.io/manual/pipeline/inputs).
    # @default -- [tcp input](https://docs.fluentbit.io/manual/pipeline/inputs/tcp) on port 5170 and [forward input](https://docs.fluentbit.io/manual/pipeline/inputs/forward) on port 24224
    inputs: |
      [INPUT]
          Name        tcp
          Listen      0.0.0.0
          Port        5170
          Chunk_Size  1M
          Buffer_Size 6M
          Format      json

      [INPUT]
          Name              forward
          Listen            0.0.0.0
          Port              24224
          Buffer_Chunk_Size 1M
          Buffer_Max_Size   6M

    # -- Add custom fluent-bit [filters configuration](https://docs.fluen tbit.io/manual/pipeline/filters).
    # @default -- Example that drops specific events using [grep](https://docs.fluentbit.io/manual/pipeline/filters/grep)
    filters: |
      [FILTER]
          Name     grep
          Alias    tss.actionlog
          Match    tss.actionlog
          Exclude  Category node_communication
